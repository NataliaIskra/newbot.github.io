# -*- coding: utf-8 -*-
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from collections import defaultdict
import os
import time

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –í–∞–∂–Ω–æ: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏ ADMIN_CHAT_ID.
try:
    BOT_TOKEN = os.environ['BOT_TOKEN']
    ADMIN_CHAT_ID = os.environ['ADMIN_CHAT_ID']
except KeyError:
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏ ADMIN_CHAT_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

bot = telebot.TeleBot(BOT_TOKEN)

# --- –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π ---
user_answers = defaultdict(dict)
user_state = defaultdict(dict) # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"

# --- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞ ---
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
QUESTIONS_ORDER = ['q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11', 'q12', 'q13', 'q14']

QUESTIONS_DATA = {
    'q1': {
        'text': '–í—ã –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ (–Ω–µ –ø—Ä–æ–¥–∞–≤–∞—è, –∞ –∏–∑—É—á–∞—è –∏—Ö –ø—Ä–æ–±–ª–µ–º—ã) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞?',
        'key': 'interviews',
        'answers': {
            'q1_opt1': "–î–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–æ (>5)",
            'q1_opt2': "–î–∞, –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑",
            'q1_opt3': "–ù–µ—Ç, –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª"
        }
    },
    'q2': {
        'text': '–ö–∞–∫–∞—è –∫–ª—é—á–µ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∫–ª–∏–µ–Ω—Ç—ã –≤—ã–±–∏—Ä–∞—é—Ç –∏–º–µ–Ω–Ω–æ –≤–∞—Å, –∞ –Ω–µ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?',
        'key': 'reason_to_choose',
        'answers': {
            'q2_opt1': "–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
            'q2_opt2': "–¶–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ",
            'q2_opt3': "–°–µ—Ä–≤–∏—Å/–æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            'q2_opt4': "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å"
        }
    },
    'q3': {
        'text': '–ù–∞—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º –≤–∞—à –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥–∞–∂? –ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é —Å–∫–∞–∑–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –±—É–¥–µ—Ç –≤ –∫–∞—Å—Å–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ?',
        'key': 'sales_predictability',
        'answers': {
            'q3_opt1': "–î–∞, –ø—Ä–æ–≥–Ω–æ–∑ —Ç–æ—á–Ω—ã–π",
            'q3_opt2': "–ü—Ä–æ–≥–Ω–æ–∑ –Ω–µ—Ç–æ—á–Ω—ã–π",
            'q3_opt3': "–ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ"
        }
    },
    'q4': {
        'text': '–ö–∞–∫–æ–π —ç—Ç–∞–ø –≤ –≤–∞—à–µ–π –≤–æ—Ä–æ–Ω–∫–µ –ø—Ä–æ–¥–∞–∂ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º —É–∑–∫–∏–º –º–µ—Å—Ç–æ–º?',
        'key': 'bottleneck',
        'answers': {
            'q4_opt1': "–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –ª–∏–¥–æ–≤",
            'q4_opt2': "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è",
            'q4_opt3': "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã/–∑–∞–∫—Ä—ã—Ç–∏–µ",
            'q4_opt4': "–ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏",
            'q4_opt5': "–ù–µ—Ç –≤–æ—Ä–æ–Ω–∫–∏"
        }
    },
    'q5': {
        'text': '–ö–∞–∫–∞—è —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–¥–∞–∂ —Ç—Ä–µ–±—É–µ—Ç –≤–∞—à–µ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ª–∏—á–Ω–æ–≥–æ —É—á–∞—Å—Ç–∏—è?',
        'key': 'personal_involvement',
        'answers': {
            'q5_opt1': "–¢–æ–ª—å–∫–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ",
            'q5_opt2': "–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫",
            'q5_opt3': "–ü–æ—á—Ç–∏ –≤—Å–µ"
        }
    },
    'q6': {
        'text': '–ö–∞–∫ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é —Å —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª—å—é –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª–≥–æ–¥–∞?',
        'key': 'profit_situation',
        'answers': {
            'q6_opt1': "–ü—Ä–∏–±—ã–ª—å —Ä–∞—Å—Ç–µ—Ç",
            'q6_opt2': "–ü—Ä–∏–±—ã–ª—å \"–ø–ª–∞–≤–∞–µ—Ç\"",
            'q6_opt3': "–ù–æ–ª—å/—É–±—ã—Ç–æ–∫/–Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ"
        }
    },
    'q7': {
        'text': '–í—ã –≤–µ–¥–µ—Ç–µ –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑—Ä–µ–∑–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤?',
        'key': 'profit_analysis',
        'answers': {
            'q7_opt1': "–î–∞, –ø–æ –¥–∞–Ω–Ω—ã–º",
            'q7_opt2': "–î–∞, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ",
            'q7_opt3': "–ù–µ—Ç, –æ–±—â–∏–π –∏—Ç–æ–≥"
        }
    },
    'q8': {
        'text': '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ –≤–∞–º –Ω—É–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±–æ—Ä–æ—Ç –≤ –¥–≤–∞ —Ä–∞–∑–∞. –ì–æ—Ç–æ–≤–∞ –ª–∏ –∫ —ç—Ç–æ–º—É –≤–∞—à–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–æ–¥–µ–ª—å?',
        'key': 'scaling_readiness',
        'answers': {
            'q8_opt1': "–î–∞, –≥–æ—Ç–æ–≤–∞",
            'q8_opt2': "–ù–µ—Ç, –±—É–¥–µ—Ç —Ö–∞–æ—Å"
        }
    },
    'q9': {
        'text': '–ú–æ–∂–µ—Ç –ª–∏ –≤–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±–µ–∑ –≤–∞—à–µ–≥–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–∏–∫—Ä–æ–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞?',
        'key': 'team_autonomy',
        'answers': {
            'q9_opt1': "–î–∞, –∞–≤—Ç–æ–Ω–æ–º–Ω–∞",
            'q9_opt2': "–¢—Ä–µ–±—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è",
            'q9_opt3': "–í—Å–µ –Ω–∞ –º–Ω–µ"
        }
    },
    'q10': {
        'text': '–ö–∞–∫ —á–∞—Å—Ç–æ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –º–µ–Ω—è—é—Ç—Å—è –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã (–∑–∞–¥–∞—á–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é/–º–µ—Å—è—Ü)?',
        'key': 'priority_change',
        'answers': {
            'q10_opt1': "–†–µ–¥–∫–æ, –ø–æ –ø–ª–∞–Ω—É",
            'q10_opt2': "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏",
            'q10_opt3': "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ, \"–ø–æ–∂–∞—Ä—ã\""
        }
    },
    'q11': {
        'text': '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É –≤–∞—Å –∑–∞–π–º–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã?',
        'key': 'hypothesis_speed',
        'answers': {
            'q11_opt1': "–î–æ –Ω–µ–¥–µ–ª–∏",
            'q11_opt2': "2-4 –Ω–µ–¥–µ–ª–∏",
            'q11_opt3': "–ë–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞",
            'q11_opt4': "–ú—ã —Ç–∞–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º"
        }
    },
    'q12': {
        'text': '–ö–∞–∫ –≤–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Ä—ã–Ω–∫–µ?',
        'key': 'market_reaction',
        'answers': {
            'q12_opt1': "–ë—ã—Å—Ç—Ä–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º—Å—è",
            'q12_opt2': "–†–µ–∞–≥–∏—Ä—É–µ–º, –Ω–æ —Å —Ö–∞–æ—Å–æ–º",
            'q12_opt3': "–°—Ç–∞—Ä–∞–µ–º—Å—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å",
            'q12_opt4': "–ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–æ–ª–≥–∞—è"
        }
    },
    'q13': {
        'text': '–ö–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è —Ü–µ–ª—å –¥–ª—è –≤–∞—Å —Å–µ–π—á–∞—Å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ?',
        'key': 'strategy_goal',
        'answers': {
            'q13_opt1': "–°–∏—Å—Ç–µ–º–Ω—ã–π –±–∏–∑–Ω–µ—Å",
            'q13_opt2': "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥",
            'q13_opt3': "–õ—É—á—à–∏–π –ø—Ä–æ–¥—É–∫—Ç",
            'q13_opt4': "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"
        }
    },
    'q14': {
        'text': '–ß—Ç–æ –≤–∞—Å, –∫–∞–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞, –±–µ—Å–ø–æ–∫–æ–∏—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏?',
        'key': 'frustration',
        'answers': {
            'q14_opt1': "–û—â—É—â–µ–Ω–∏–µ \"–ø–ª–∞—Ç–æ\"",
            'q14_opt2': "–í—ã–≥–æ—Ä–∞–Ω–∏–µ",
            'q14_opt3': "–ü—Ä–∏–±—ã–ª—å/—É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å",
            'q14_opt4': "–ù–µ—Ç —Ñ–æ–∫—É—Å–∞",
            'q14_opt5': "–ù–∏—á–µ–≥–æ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç"
        }
    }
}
# –¢–µ–∫—Å—Ç—ã –≤–µ—Ä–¥–∏–∫—Ç–æ–≤... (–ø–æ–ª–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∏–∑ –¢–ó)
VERDICT_DATA = {
    'verdikt1': {"name": "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å (—Ç—Ä–µ–∫–∏–Ω–≥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è)", "text": "..."},
    'verdikt2': {"name": "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ", "text": "..."},
    'verdikt3': {"name": "–ü–æ–∏—Å–∫ —Ç–æ—á–∫–∏ –∫—Ä–∞—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞", "text": "..."},
    'verdikt4': {"name": "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É", "text": "..."},
    'verdikt5': {"name": "–°–∏—Å—Ç–µ–º–Ω—ã–π —Å–±–æ–π: —Ñ–æ–∫—É—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç–∏", "text": "..."}
}
# –ó–∞–ø–æ–ª–Ω–∏–º —Ç–µ–∫—Å—Ç—ã –≤–µ—Ä–¥–∏–∫—Ç–æ–≤ –∏–∑ –¢–ó
VERDICT_DATA['verdikt1']['text'] = 'üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥: –í–∞—à–∞ –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–∏–º —Ç–µ–∫—É—â–∏–º —Ü–µ–ª—è–º. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ç–æ—á–∫–µ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏.\n\n–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: –¢—Ä–µ–∫–∏–Ω–≥ ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∏–±–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫—Ä–∏–∑–∏—Å–µ, –ª–∏–±–æ —Å—Ç—Ä–µ–º—è—Ç—Å—è –∫ –∫—Ä–∞—Ç–Ω–æ–º—É —Ä–æ—Å—Ç—É, —á—Ç–æ –≤—Å–µ–≥–¥–∞ —Å–æ–ø—Ä—è–∂–µ–Ω–æ —Å –≤—ã—Ö–æ–¥–æ–º –∏–∑ –∑–æ–Ω—ã –∫–æ–º—Ñ–æ—Ä—Ç–∞. –°—É–¥—è –ø–æ –≤–∞—à–∏–º –æ—Ç–≤–µ—Ç–∞–º, –≤–∞—à —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å ‚Äî —ç—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –∞ –Ω–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π —Ä–æ—Å—Ç. –í —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –±–æ–ª—å—à–µ –≤—Ä–µ–¥–∞, —á–µ–º –ø–æ–ª—å–∑—ã.\n\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–µ–ª–∞—Ç—å —Ç–æ, —á—Ç–æ —É –≤–∞—Å –æ—Ç–ª–∏—á–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–Ω—Ç–∞–∫—Ç (@natalia_koch). –ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –≤—ã —Ä–µ—à–∏—Ç–µ, —á—Ç–æ –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤–æ–º—É —Ä—ã–≤–∫—É, –∏–ª–∏ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ —Ä—ã–Ω–æ–∫ –º–µ–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –≤—ã, ‚Äî —ç—Ç–æ –±—É–¥–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–º –∫ —Ç–æ–º—É, —á—Ç–æ –ø–æ—Ä–∞ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É.'
VERDICT_DATA['verdikt2']['text'] = 'üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥: –£ –≤–∞—Å –≤—ã—Å—Ç—Ä–æ–µ–Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –ë–∏–∑–Ω–µ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ –∏ –ø—Ä–∏–±—ã–ª—å–Ω–æ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –æ—Ç –∑–∞–¥–∞—á –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –∑–∞–¥–∞—á–∞–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n–ì–∏–ø–æ—Ç–µ–∑–∞ –æ –ø—Ä–æ–±–ª–µ–º–µ: –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å, –∏–¥–µ–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä—ã–Ω–æ–∫, –∏—Å—á–µ—Ä–ø–∞–ª–∞ —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è –∫—Ä–∞—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞. –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç–∞–≥–Ω–∞—Ü–∏–∏ –≤—ã—Ä—É—á–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–ª–∞—Ç–æ (—É—â–µ—Ä–± –≤ –≤–∏–¥–µ —É–ø—É—â–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã) –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ —Ä–∏—Å–∫–∏ –≤ –æ–¥–Ω–æ–π —Ä—ã–Ω–æ—á–Ω–æ–π –Ω–∏—à–µ. –î–∞–ª—å–Ω–µ–π—à–∏–π —Ä–æ—Å—Ç —Ç—Ä–µ–±—É–µ—Ç –Ω–µ —É–ª—É—á—à–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ—Ö–æ–¥–∞.\n\n–ö–∞–∫ —Ç—Ä–µ–∫–∏–Ω–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω: –í —Ä–æ–ª–∏ —Å–ø–∞—Ä—Ä–∏–Ω–≥-–ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. –¢—Ä–µ–∫–µ—Ä –ø–æ–º–æ–∂–µ—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å—é: —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ä—ã–Ω–∫–∏, –∫–∞–Ω–∞–ª—ã, –ø—Ä–æ–¥—É–∫—Ç—ã, –Ω–µ —Ä–∞–∑—Ä—É—à–∞—è –ø—Ä–∏ —ç—Ç–æ–º —Ä–∞–±–æ—Ç–∞—é—â—É—é —Å–∏—Å—Ç–µ–º—É. –ú—ã –≤–º–µ—Å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º –≥–∏–ø–æ—Ç–µ–∑—É –æ –≤–∞—à–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ –∏ —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –µ–≥–æ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏.\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é (1.5 —á–∞—Å–∞), —á—Ç–æ–±—ã —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ü–µ–Ω–∏—Ç—å –≥–∏–ø–æ—Ç–µ–∑—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–æ—Å—Ç–∞.'
VERDICT_DATA['verdikt3']['text'] = 'üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥: –í—ã –º–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ, –Ω–æ –±–∏–∑–Ω–µ—Å –Ω–µ —Ä–∞—Å—Ç–µ—Ç –∫—Ä–∞—Ç–Ω–æ. –≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –≤–∞—à–∏ —É—Å–∏–ª–∏—è –∏ —Ä–µ—Å—É—Ä—Å—ã —Ç—Ä–∞—Ç—è—Ç—Å—è –Ω–µ –Ω–∞ —Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–æ—Å—Ç —Å–∏—Å—Ç–µ–º—ã.\n\n–ì–∏–ø–æ—Ç–µ–∑–∞ –æ –ø—Ä–æ–±–ª–µ–º–µ: –í –≤–∞—à–µ–π –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ–æ—á–µ–≤–∏–¥–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –±–∞—Ä—å–µ—Ä. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç–µ —Ç–æ, —á—Ç–æ –∏ —Ç–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø–ª–æ—Ö–æ, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–µ–µ "—É–∑–∫–æ–µ –º–µ—Å—Ç–æ" –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –≤–Ω–∏–º–∞–Ω–∏—è.\n\n–ö–∞–∫ –ø–æ–º–æ–∂–µ—Ç —Ç—Ä–µ–∫–µ—Ä: –ö–∞–∫ —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–≥–Ω–æ—Å—Ç. –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–π—Ç–∏ —Ç–æ —Å–∞–º–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –¥–∞—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í—ã —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç–µ –≤—Å–µ —É—Å–∏–ª–∏—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ä–∞—Å—à–∏–≤–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Ö–∞–æ—Ç–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫ —Ä–æ—Å—Ç—É.\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ù–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–∏ (1.5 —á–∞—Å–∞) –º—ã –ø—Ä–æ–≤–µ–¥–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –≤—ã—è–≤–∏–º —Ç–æ —Å–∞–º–æ–µ "—É–∑–∫–æ–µ –º–µ—Å—Ç–æ", –∫–æ—Ç–æ—Ä–æ–µ —Å–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∞—à —Ä–æ—Å—Ç, –∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –≥–∏–ø–æ—Ç–µ–∑—ã –ø–æ –µ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é.'
VERDICT_DATA['verdikt4']['text'] = 'üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥: –†–æ—Å—Ç –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω —Å–∫–æ—Ä–æ—Å—Ç—å—é –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ‚Äî –≤–∞—Å. –ë–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–æ–¥–∞–∂–∏, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –≤–∏–¥–µ –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –æ–ø—ã—Ç–∞, –∞ –Ω–µ –∫–∞–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–∞—è —Å–∏—Å—Ç–µ–º–∞.\n\n–ì–∏–ø–æ—Ç–µ–∑–∞ –æ –ø—Ä–æ–±–ª–µ–º–µ: –í–∞—à–∞ –≥–ª—É–±–æ–∫–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–æ–¥–∞–∂ –Ω–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ö–∞–∂–¥—ã–π —á–∞—Å, –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–π –Ω–∞ "—Ä—É—á–Ω–æ–µ" –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–¥–µ–ª–∫–∏, ‚Äî —ç—Ç–æ —á–∞—Å, –Ω–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å–∏—Å—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏–ª–∞ –±—ã –∫–æ–º–∞–Ω–¥–µ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –±–µ–∑ –≤–∞—Å. –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç–∞–≥–Ω–∞—Ü–∏–∏ (—Ä–æ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤–∞—à–∏–º –≤—Ä–µ–º–µ–Ω–µ–º) –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é —É—è–∑–≤–∏–º–æ—Å—Ç—å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.\n\n–î–∞–∂–µ –µ—Å–ª–∏ —á–∞—Å—Ç—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∫–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ (–ø—Ä–æ–¥–∞–∂–∏, —Ñ–∏–Ω–∞–Ω—Å—ã, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è) –≤—Å–µ –µ—â–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–º–∫–Ω—É—Ç—ã –Ω–∞ –≤–∞—Å. –≠—Ç–æ —Å–æ–∑–¥–∞–µ—Ç —Ä–∏—Å–∫: –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å \'–Ω–µ —Ç–æ\', –∞ –≤—ã ‚Äî –≤—ã–≥–æ—Ä–∞—Ç—å, –ø—ã—Ç–∞—è—Å—å –≤—Å–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å.\n\n–ö–∞–∫ –ø–æ–º–æ–∂–µ—Ç —Ç—Ä–µ–∫–µ—Ä: –ö–∞–∫ –º–µ—Ç–æ–¥–æ–ª–æ–≥. –ú—ã —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –≤–∞—à —à–∞–≥ –ø—Ä–µ–≤—Ä–∞—â–∞–ª—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –¥–µ–Ω—å–≥–∏, –Ω–æ –∏ –≤ —ç–ª–µ–º–µ–Ω—Ç –±—É–¥—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–∫–∏, –Ω–µ —Ç–µ—Ä—è—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ, –∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ –≤—Ä–µ–º—è –Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ü–µ—Ä–≤—ã–π —à–∞–≥ ‚Äî –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è (1.5 —á–∞—Å–∞). –ù–∞ –Ω–µ–π –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, –º–µ—à–∞—é—â–µ–µ –≤–∞–º —Ä–∞—Å—Ç–∏. –î–∞–ª–µ–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ "—Ä–∞—Å—à–∏–≤–∞—Ç—å" —É–∑–∫–∏–µ –º–µ—Å—Ç–∞ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–µ—Ä–µ–¥–∞–≤–∞—è –≤—Å–µ –±–æ–ª—å—à–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–æ–º–∞–Ω–¥–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç.'
VERDICT_DATA['verdikt5']['text'] = 'üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥: –í–∞—à–∞ –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ. –£—Å–∏–ª–∏—è —Ä–∞—Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω—ã, –∞ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É "—Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–æ–≤", —á—Ç–æ –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º—É —Ä–æ—Å—Ç—É —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏.\n\n–ì–∏–ø–æ—Ç–µ–∑–∞ –æ –ø—Ä–æ–±–ª–µ–º–µ: –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –æ—Ç–æ—Ä–≤–∞–Ω –æ—Ç –µ–≥–æ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —á–∏—Å—Ç—É—é –ø—Ä–∏–±—ã–ª—å. –ö–æ–º–∞–Ω–¥–∞ —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏ "—Ç—É—à–µ–Ω–∏–∏ –ø–æ–∂–∞—Ä–æ–≤", –∞ –Ω–µ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø—Ä—è–º—É—é —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –¥–æ—Ö–æ–¥ –∏–ª–∏ —Å–Ω–∏–∂–∞—é—Ç –∏–∑–¥–µ—Ä–∂–∫–∏. –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —É—Ç–µ—á–∫–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–∏–∑–Ω–µ—Å—É –≤—ã–π—Ç–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ö–∞–æ—Å–∞.\n\n–ö–∞–∫ –ø–æ–º–æ–∂–µ—Ç —Ç—Ä–µ–∫–µ—Ä (—Ñ–æ–∫—É—Å –Ω–∞ —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç–∏): –ù–∞—à–∞ –ø–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ö–∞–æ—Å –∏ –≤–µ—Ä–Ω—É—Ç—å –≤–∞–º –∫–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–æ–≥–æ —Ü–∏–∫–ª–∞. –ú—ã –Ω–∞–π–¥–µ–º –æ–¥–Ω—É –∫–ª—é—á–µ–≤—É—é –º–µ—Ç—Ä–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å—é, –∏ —Å–¥–µ–ª–∞–µ–º –µ—ë "–∫–æ–º–ø–∞—Å–æ–º" –¥–ª—è –≤—Å–µ—Ö –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –º—ã –±—É–¥–µ–º —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–∏ –ø–æ —ç—Ç–æ–π –º–µ—Ç—Ä–∏–∫–µ, –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≥–∏–ø–æ—Ç–µ–∑—ã –ø–æ –µ—ë —É–ª—É—á—à–µ–Ω–∏—é –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–π—Ç–∏ –æ—Ç —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–º—É.\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é (1.5 —á–∞—Å–∞). –ù–∞ –Ω–µ–π –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–µ —Å–∞–º—ã–µ –∫–ª—é—á–µ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–µ—à–∞—é—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–æ–º. –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é —Ä–∞–±–æ—Ç—É, –≤–æ–∑–≤—Ä–∞—â–∞—è –≤ –±–∏–∑–Ω–µ—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –∏ –∫–∞–∫ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.'

# --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def escape_markdown_v2(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2."""
    escape_chars = r'_*[]()~`>#+-=|{}.!'
    return ''.join(f'\\{char}' if char in escape_chars else char for char in text)

def notify_admin(user_id, data, verdict_name):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    try:
        user_info = bot.get_chat(user_id)
        username = escape_markdown_v2(user_info.username or "N/A")
        first_name = escape_markdown_v2(user_info.first_name or "")
        message_text = (f"üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É\\!* \n\n"
                        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* @{username} \\({first_name}\\)\n"
                        f"üÜî *User ID:* `{user_id}`\n\n"
                        f"ü§ñ *–î–∏–∞–≥–Ω–æ–∑ –±–æ—Ç–∞:* {escape_markdown_v2(verdict_name)}\n\n"
                        f"*--- –î–æ—Å—å–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---*\n")
        
        report_data = {
            "–ö–ª–∏–µ–Ω—Ç—ã": [
                ("–ò–Ω—Ç–µ—Ä–≤—å—é", data.get('interviews')),
                ("–ü—Ä–∏—á–∏–Ω–∞ –≤—ã–±–æ—Ä–∞", data.get('reason_to_choose')),
            ],
            "–ü—Ä–æ–¥–∞–∂–∏": [
                ("–ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å", data.get('sales_predictability')),
                ("–£–∑–∫–æ–µ –º–µ—Å—Ç–æ", data.get('bottleneck')),
                ("–õ–∏—á–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ", data.get('personal_involvement')),
            ],
            "–§–∏–Ω–∞–Ω—Å—ã": [
                 ("–ü—Ä–∏–±—ã–ª—å", data.get('profit_situation')),
                 ("–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏", data.get('profit_analysis')),
                 ("–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–æ—Å—Ç—É x2", data.get('scaling_readiness')),
            ],
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": [
                ("–ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã", data.get('team_autonomy')),
                ("–°–º–µ–Ω–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤", data.get('priority_change')),
            ],
            "–ì–∏–±–∫–æ—Å—Ç—å": [
                 ("–°–∫–æ—Ä–æ—Å—Ç—å –≥–∏–ø–æ—Ç–µ–∑", data.get('hypothesis_speed')),
                 ("–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è", data.get('market_reaction')),
            ],
            "–°—Ç—Ä–∞—Ç–µ–≥–∏—è": [
                 ("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", data.get('strategy_goal')),
                 ("–ë–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ", data.get('frustration')),
            ]
        }

        for block_name, items in report_data.items():
            message_text += f"\n*{escape_markdown_v2(block_name)}:*\n"
            for item_name, item_value in items:
                value_str = escape_markdown_v2(str(item_value) or "–ù–µ –æ—Ç–≤–µ—á–µ–Ω–æ")
                message_text += f"‚Ä¢ {escape_markdown_v2(item_name)}: _{value_str}_\n"

        bot.send_message(ADMIN_CHAT_ID, message_text, parse_mode="MarkdownV2")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É: {e}")
        bot.send_message(ADMIN_CHAT_ID, f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∫–µ—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")

def send_verdict(chat_id, verdict_key):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ä–¥–∏–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    data = VERDICT_DATA[verdict_key]
    text = data['text']
    markup = InlineKeyboardMarkup()
    buttons = {
        'verdikt1': ("–°–ø–∞—Å–∏–±–æ, –±—ã–ª–æ –ø–æ–ª–µ–∑–Ω–æ", "feedback_thanks"),
        'verdikt2': ("–û–±—Å—É–¥–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é", "https://t.me/natalia_koch"),
        'verdikt3': ("–ù–∞–π—Ç–∏ \"—É–∑–∫–æ–µ –º–µ—Å—Ç–æ\"", "https://t.me/natalia_koch"),
        'verdikt4': ("–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è", "https://t.me/natalia_koch"),
        'verdikt5': ("–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∞–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω—ã–π –ø–ª–∞–Ω", "https://t.me/natalia_koch")
    }
    btn_text, btn_data = buttons.get(verdict_key)
    
    if verdict_key == 'verdikt1':
        markup.add(InlineKeyboardButton(btn_text, callback_data=btn_data))
        bot.send_message(chat_id, text, reply_markup=markup)
        notify_admin(chat_id, user_answers.get(chat_id, {}), data['name'])
    else:
        markup.add(InlineKeyboardButton(btn_text, url=btn_data))
        bot.send_message(chat_id, text, reply_markup=markup)
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ analyze_results, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ
    
def ask_question(chat_id, q_index, is_editing=False):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    question_code = QUESTIONS_ORDER[q_index]
    q_data = QUESTIONS_DATA[question_code]
    
    markup = InlineKeyboardMarkup(row_width=1)
    buttons = [InlineKeyboardButton(text, callback_data=cb_data) for cb_data, text in q_data['answers'].items()]
    markup.add(*buttons)
    
    if q_index > 0:
        markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_{q_index}"))

    if is_editing:
        bot.edit_message_text(q_data['text'], chat_id, message_id=user_state[chat_id]['last_message_id'], reply_markup=markup)
    else:
        sent_message = bot.send_message(chat_id, q_data['text'], reply_markup=markup)
        user_state[chat_id]['last_message_id'] = sent_message.message_id
    
    user_state[chat_id]['current_q_index'] = q_index

def analyze_results(user_id):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ—Ä–¥–∏–∫—Ç."""
    data = user_answers.get(user_id)
    if not data or len(data) < len(QUESTIONS_DATA):
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–µ –≤—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
        return

    # 1. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "–¢—Ä–µ–∫–∏–Ω–≥ –Ω–µ –Ω—É–∂–µ–Ω"
    if data.get('frustration') == "–ù–∏—á–µ–≥–æ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç" and \
       data.get('profit_situation') == "–ü—Ä–∏–±—ã–ª—å —Ä–∞—Å—Ç–µ—Ç" and \
       data.get('team_autonomy') == "–î–∞, –∞–≤—Ç–æ–Ω–æ–º–Ω–∞":
        verdict_key = 'verdikt1'
        send_verdict(user_id, verdict_key)
        return

    # 2. –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–µ—Ä–¥–∏–∫—Ç–æ–≤
    scores = defaultdict(int)

    # –°–∏—Å—Ç–µ–º–Ω—ã–π —Å–±–æ–π
    if data.get('profit_situation') == "–ù–æ–ª—å/—É–±—ã—Ç–æ–∫/–Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ": scores['verdikt5'] += 2
    if data.get('priority_change') == "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ, \"–ø–æ–∂–∞—Ä—ã\"": scores['verdikt5'] += 2
    if data.get('market_reaction') in ["–ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–æ–ª–≥–∞—è", "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–∏–≤–∞—é—Ç"]: scores['verdikt5'] += 1
    if data.get('frustration') == "–ü—Ä–∏–±—ã–ª—å/—É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å": scores['verdikt5'] += 3
    if data.get('scaling_readiness') == "–ù–µ—Ç, –±—É–¥–µ—Ç —Ö–∞–æ—Å": scores['verdikt5'] += 1

    # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞
    if data.get('personal_involvement') in ["–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫", "–ü–æ—á—Ç–∏ –≤—Å–µ"]: scores['verdikt4'] += 2
    if data.get('team_autonomy') == "–í—Å–µ –Ω–∞ –º–Ω–µ": scores['verdikt4'] += 2
    if data.get('frustration') == "–í—ã–≥–æ—Ä–∞–Ω–∏–µ": scores['verdikt4'] += 3

    # –ü–æ–∏—Å–∫ —Ç–æ—á–∫–∏ —Ä–æ—Å—Ç–∞ / –ü–ª–∞—Ç–æ
    if data.get('sales_predictability') == "–ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ": scores['verdikt3'] += 1
    if data.get('profit_situation') == "–ü—Ä–∏–±—ã–ª—å \"–ø–ª–∞–≤–∞–µ—Ç\"": scores['verdikt3'] += 1
    if data.get('interviews') == "–ù–µ—Ç, –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª": scores['verdikt3'] += 1
    if data.get('hypothesis_speed') in ["–ë–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞", "–ú—ã —Ç–∞–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º"]: scores['verdikt3'] += 2
    if data.get('frustration') in ["–û—â—É—â–µ–Ω–∏–µ \"–ø–ª–∞—Ç–æ\"", "–ù–µ—Ç —Ñ–æ–∫—É—Å–∞"]: scores['verdikt3'] += 3

    # –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    if data.get('strategy_goal') != "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å": scores['verdikt2'] += 1
    if data.get('scaling_readiness') == "–î–∞, –≥–æ—Ç–æ–≤–∞": scores['verdikt2'] += 2
    if data.get('team_autonomy') == "–î–∞, –∞–≤—Ç–æ–Ω–æ–º–Ω–∞": scores['verdikt2'] += 1
    
    # 3. –í—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –ø–æ –±–∞–ª–ª–∞–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    # –£–±–∏—Ä–∞–µ–º verdikt1, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω
    if 'verdikt1' in scores: del scores['verdikt1']

    if not scores: # –ï—Å–ª–∏ –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–æ—Å—Ç –µ—Å—Ç—å
        verdict_key = 'verdikt2'
    else:
        max_score = max(scores.values())
        winners = [key for key, score in scores.items() if score == max_score]
        
        priority = ['verdikt5', 'verdikt4', 'verdikt3', 'verdikt2']
        for p in priority:
            if p in winners:
                verdict_key = p
                break
        else: # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
            verdict_key = 'verdikt3'
            
    verdict_info = VERDICT_DATA[verdict_key]
    notify_admin(user_id, data, verdict_info['name'])
    send_verdict(user_id, verdict_key)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.chat.id
    user_answers[user_id] = {}
    user_state[user_id] = {'history': []}
    
    welcome_text = (
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –Ø ‚Äî –±–æ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –±–∏–∑–Ω–µ—Å–∞. –ú–æ—è —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –∑–∞ 10 –º–∏–Ω—É—Ç –≤—ã—è–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø–æ–Ω—è—Ç—å, –Ω—É–∂–µ–Ω –ª–∏ –≤–∞–º —Å–µ–π—á–∞—Å –±–∏–∑–Ω–µ—Å-—Ç—Ä–µ–∫–∏–Ω–≥."
        "\n–î–∏–∞–ª–æ–≥ –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Ç—Ä–µ–∫–∏–Ω–≥–∞. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º?")
    
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ù–∞—á–∞—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É", callback_data="start_quiz"))
    bot.send_message(user_id, welcome_text, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def handle_callbacks(call):
    user_id = call.message.chat.id
    message_id = call.message.message_id
    
    if call.data == "start_quiz":
        bot.edit_message_reply_markup(chat_id=user_id, message_id=message_id, reply_markup=None)
        user_state[user_id]['history'] = []
        ask_question(user_id, 0)
        return

    if call.data.startswith('back_'):
        prev_q_index = int(call.data.split('_')[1]) - 1
        if prev_q_index >= 0:
            ask_question(user_id, prev_q_index, is_editing=True)
        return

    if call.data == "feedback_thanks":
        bot.answer_callback_query(call.id, "–°–ø–∞—Å–∏–±–æ!")
        bot.edit_message_reply_markup(chat_id=user_id, message_id=message_id, reply_markup=None)
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
    if call.data.startswith('q'):
        bot.edit_message_reply_markup(chat_id=user_id, message_id=message_id, reply_markup=None)
        
        question_code = call.data.split('_')[0]
        q_data = QUESTIONS_DATA[question_code]
        answer_text = q_data['answers'][call.data]
        user_answers[user_id][q_data['key']] = answer_text

        current_q_index = QUESTIONS_ORDER.index(question_code)
        
        progress_messages = {
            2: '–°–ø–∞—Å–∏–±–æ. –ü—Ä–æ–π–¥–µ–Ω–æ 20%. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–¥–∞–∂–∞–º.',
            5: '–ü—Ä–∏–Ω—è—Ç–æ. –ú—ã –Ω–∞ —ç–∫–≤–∞—Ç–æ—Ä–µ. –¢–µ–ø–µ—Ä—å –æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º –∑–¥–æ—Ä–æ–≤—å–µ.',
            8: '–û—Ç–ª–∏—á–Ω–æ. –ü—Ä–æ–π–¥–µ–Ω–æ 60%. –¢–µ–ø–µ—Ä—å –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ.',
            10: '–ü—Ä–∏–Ω—è—Ç–æ. –ü—Ä–æ–π–¥–µ–Ω–æ 80%. –¢–µ–ø–µ—Ä—å –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –±–ª–æ–∫ –æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –≥–∏–±–∫–æ—Å—Ç–∏.',
            12: '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä—ã–≤–æ–∫! –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –±–ª–æ–∫ ‚Äî –æ –≤–∞—Å –∏ –±—É–¥—É—â–µ–º.'
        }
        if current_q_index + 1 in progress_messages:
             bot.send_message(user_id, progress_messages[current_q_index + 1])
        
        next_q_index = current_q_index + 1
        if next_q_index < len(QUESTIONS_ORDER):
            ask_question(user_id, next_q_index)
        else:
            bot.send_message(user_id, '–°–ø–∞—Å–∏–±–æ, —ç—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –ì–æ—Ç–æ–≤–ª—é –¥–ª—è –≤–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥...')
            analyze_results(user_id)

if __name__ == '__main__':
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
            bot.polling(none_stop=True)
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ polling: {e}")
            time.sleep(15)
